{"version":3,"sources":["Components/Profile.png","Components/Schedule.png","Components/notetaker.png","Components/Movie.png","Components/password.png","Components/teamprofilegenerator.png","Components/invitor.png","Components/Landing.js","App.js","reportWebVitals.js","index.js"],"names":["Landing","Navbar","bg","variant","Brand","href","Nav","className","Link","NavDropdown","title","id","Item","Divider","Container","Row","Col","xs","md","Image","src","Profile","alt","roundedCircle","Card","border","style","width","Header","Body","Title","Text","CardColumns","Img","Schedule","Button","text","notetaker","Footer","teamprofilegenerator","password","Movie","invitor","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3a6ec31f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Profile.484a2274.png\";","export default __webpack_public_path__ + \"static/media/Schedule.852121b7.png\";","export default __webpack_public_path__ + \"static/media/notetaker.67d47956.png\";","export default __webpack_public_path__ + \"static/media/Movie.e614e336.png\";","export default __webpack_public_path__ + \"static/media/password.e491b762.png\";","export default __webpack_public_path__ + \"static/media/teamprofilegenerator.bdc52832.png\";","export default __webpack_public_path__ + \"static/media/invitor.871c6bcf.png\";","import Navbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\nimport NavDropdown from 'react-bootstrap/NavDropdown';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Image from 'react-bootstrap/Image';\nimport Button from 'react-bootstrap/Button';\nimport CardColumns from 'react-bootstrap/CardColumns';\nimport Card from 'react-bootstrap/Card';\nimport React from 'react';\nimport Profile from './Profile.png';\nimport Schedule from './Schedule.png';\nimport notetaker from './notetaker.png';\nimport Movie from './Movie.png';\nimport password from './password.png';\nimport teamprofilegenerator from './teamprofilegenerator.png';\nimport invitor from './invitor.png';\nimport './Land.css';\n\n\n// Landing page Navbar\nconst Landing = () => {\n    return (\n        <div>\n            <Navbar bg=\"dark\" variant=\"dark\">\n                <Navbar.Brand href=\"#home\">Lillian Paris</Navbar.Brand>\n                <Nav className=\"mr-auto\">\n                    <Nav.Link href=\"./Components/Landing\">Home</Nav.Link>\n                    <Nav.Link href=\"./Components/Contact\">Contact</Nav.Link>\n                    <Nav.Link href=\"#pricing\">About</Nav.Link>\n                    <Nav.Link href=\"#pricing\">Resume</Nav.Link>\n                    <NavDropdown title=\"Projects\" id=\"basic-nav-dropdown\">\n                        <NavDropdown.Item href=\"#action/3.1\">Workday Scheduler</NavDropdown.Item>\n                        <NavDropdown.Item href=\"#action/3.2\">Invitor +</NavDropdown.Item>\n                        <NavDropdown.Item href=\"#action/3.3\">Note Taker</NavDropdown.Item>\n                        <NavDropdown.Item href=\"#action/3.3\">Team Profile Generator</NavDropdown.Item>\n                        <NavDropdown.Item href=\"#action/3.3\">Movie Eaters</NavDropdown.Item>\n                        <NavDropdown.Item href=\"#action/3.3\">Weffle</NavDropdown.Item>\n                        <NavDropdown.Divider />\n                        <NavDropdown.Item href=\"#action/3.4\">Github</NavDropdown.Item>\n                    </NavDropdown>\n                </Nav>\n            </Navbar>\n            <Container>\n                <Row>\n                    <Col xs={6} md={4}>\n                        <Image src={Profile} alt=\"Profile\" roundedCircle />\n                    </Col>\n                </Row>\n\n                <Card border=\"secondary\" style={{ width: '18rem' }}>\n                    <Card.Header>Hi My Name is Lilli!</Card.Header>\n                    <Card.Body>\n                        <Card.Title>About Me</Card.Title>\n                        <Card.Text>\n                            Currently a Full stack web developer interested in learning new languages to construct sophisticated, user friendly, applications. Recently earned a certificate in full stack development from the U of A, strengthening my skills in JavaScript, Node.js, MySQL and arithmetic. Applied aspects of JavaScript and APIs in a recent project with four colleagues, to create an enjoyable night out application. Passionate about providing a useful perspective on user interfaces as well as constructing applications in group settings. Known as a contemporary problem solver always in search for a new project, with a focus on user friendlyness and development. With each project, my ambition is to deploy quality applications for an impactful user experience.\n            </Card.Text>\n                    </Card.Body>\n                </Card>\n                <br />\n            </Container>\n\n            <CardColumns>\n                <Card>\n                    <Card.Img variant=\"top\" src={Schedule} alt=\"Schedule\" />\n                    <Card.Body>\n                        <Card.Title>Workday Scheduler</Card.Title>\n                        <Card.Text>\n                            This calender application helps its users manage their time more efficiently, alongside the demands of a busy\n                            schedule. This application color codes activies based on past, present and future tasks also allowing the user to save their activities to view at a later time.\n        </Card.Text>\n                        <Button variant=\"dark\">Repository</Button>{' '}\n                        <Button variant=\"dark\">Deployed</Button>{' '}\n                    </Card.Body>\n                </Card>\n                <Card bg=\"dark\" text=\"white\" className=\"p-3\">\n                    <blockquote className=\"blockquote mb-0 card-body\">\n                        <p>\n                            \"Don't let the noise of others' opinions drown out your own inner voice.\"\n        </p>\n                        <footer className=\"blockquote-footer\">\n                            <small className=\"text-muted\">\n                                Steve Jobs<cite title=\"Source Title\"></cite>\n                            </small>\n                        </footer>\n                    </blockquote>\n                </Card>\n                <Card>\n                    <Card.Img variant=\"top\" src={notetaker} alt=\"notetaker\" />\n                    <Card.Body>\n                        <Card.Title>Note Taker</Card.Title>\n                        <Card.Text>\n                            This application is designed for users that need to keep track of a lot of\n                            information. It can be easy to forget or be unable to recall inportant information. Being able to\n                            take persistent notes allows users to have written information when needed.\n            {' '}\n                        </Card.Text>\n                        <Button href=\"https://lillianparis.github.io/note-taker/\" variant=\"dark\">Repository</Button>{' '}\n                        <Button href=\" https://arcane-shore-48502.herokuapp.com/\" variant=\"dark\">Deployed</Button>{' '}\n                    </Card.Body>\n                    <Card.Footer>\n                        <small className=\"text-muted\">Last updated 3 mins ago</small>\n                    </Card.Footer>\n                </Card>\n                <Card bg=\"dark\" text=\"white\" className=\"text-center p-3\">\n                    <blockquote className=\"blockquote mb-0 card-body\">\n                        <p>\n                            Technologies used + Skills Aquired\n                            technical programming skills in HTML5, CSS3, Javascript, JQuery, Bootstrap, Firebase, Node Js, MySQL, MongoDB, Express, Handelbars.js & ReactJS\n            </p>\n                        <footer className=\"blockquote-footer\">\n                            <small className=\"text-muted\">\n                                University of Arizona <cite title=\"Source Title\">Coding Bootcamp Graduate</cite>\n                            </small>\n                        </footer>\n                    </blockquote>\n                </Card>\n                <Card className=\"text-center\">\n                    <Card.Img variant=\"top\" src={teamprofilegenerator} alt=\"teamprofilegenerator\" />\n                    <Card.Body>\n                        <Card.Title>Team Profile Generator</Card.Title>\n                        <Card.Text>\n                            Building a Node CLI One of the most important aspects of programming is writing\n                            code that is readable, reliable, and maintainable. Oftentimes, how we design our code is just as\n                            important as the code itself. In this homework assignment, your challenge is to build a Node CLI\n                            that takes in information about employees and generates an HTML webpage that displays summaries for\n                            each person. Since testing is a key piece in making code maintainable, you will also be ensuring\n                    that all unit tests pass.{' '}\n                        </Card.Text>\n                        <Button href=\"https://github.com/lillianparis/template_engine\" variant=\"dark\">Repository</Button>{' '}\n                        <Button href=\"https://drive.google.com/file/d/1MxspBT2Xze1QpznwIGkqXLbvKcreYTV3/view?usp=sharing\" variant=\"dark\">Deployed</Button>{' '}\n                        <Card.Text>\n                            <small className=\"text-muted\">Last updated 3 mins ago</small>\n                        </Card.Text>\n                    </Card.Body>\n                </Card>\n                <Card>\n                    <Card.Img variant=\"top\" src={password} alt=\"password\" />\n                    <Card.Body>\n                        <Card.Title>Password Generator</Card.Title>\n                        <Card.Text>\n                            This application serves to create a better sense of security for password keeping.\n                            Employers want interactive pages that are also secure and user\n                    friendly, this page is meant to showcase the creators javascript knowledge and logic.{' '}\n                        </Card.Text>\n                        <Button href=\"https://github.com/lillianparis/password-generator\" variant=\"dark\">Repository</Button>{' '}\n                        <Button href=\"https://lillianparis.github.io/password-generator/\" variant=\"dark\">Deployed</Button>{' '}\n                        <Card.Text>\n                            <small className=\"text-muted\">Last updated 3 mins ago</small>\n                        </Card.Text>\n                    </Card.Body>\n                </Card>\n                <Card bg=\"dark\" text=\"white\" className=\"text-right\">\n                    <blockquote className=\"blockquote mb-0 card-body\">\n                        <p>\n                            \"Computers are incredibly fast, accurate and stupid; humans are incredibly slow, inaccurate and brilliant; together they are powerful beyond imagination.\"\n     </p>\n                        <footer className=\"blockquote-footer\">\n                            <small className=\"text-muted\">\n                                Albert Einstein <cite title=\"Source Title\"></cite>\n                            </small>\n                        </footer>\n                    </blockquote>\n                </Card>\n                <Card>\n                    <Card.Img variant=\"top\" src={Movie} alt=\"Movie\" />\n                    <Card.Body>\n                        <Card.Title>Movie Eaters</Card.Title>\n                        <Card.Text>\n                            The movie-eaters application allows\n                            its users to use their time more efficiently during a movie night out. This application utilizes the MovieGlu API to provide users with a variety of options to chose from.\n      </Card.Text>\n                        <Button href=\"https://github.com/Daellarrek/Team-Grass\" variant=\"dark\">Repository</Button>{' '}\n                        <Button href=\"https://daellarrek.github.io/Team-Grass/\" variant=\"dark\">Deployed</Button>{' '}\n                        <Card.Text>\n                            <small className=\"text-muted\">Last updated 3 mins ago</small>\n                        </Card.Text>\n                    </Card.Body>\n                </Card>\n                <Card>\n                    <Card.Img variant=\"top\" src={invitor} alt=\"invitor\" />\n                    <Card.Body>\n                        <Card.Title>Invitor +</Card.Title>\n                        <Card.Text>\n                            This applications allows its users to plan and post activities. Invitor + utilizes API's, displaying daily activities to users, allowing them to share with others as well as creating their own activities.\n        </Card.Text>\n                        <Button href=\"https://proj2-dionysus.herokuapp.com/\" variant=\"dark\">Repository</Button>{''}\n                        <Button href=\"https://github.com/Erin-Leal/Project-2-Dionysus\" variant=\"dark\">Deployed</Button>{''}\n                    </Card.Body>\n                </Card>\n            </CardColumns>\n        </div>\n\n    );\n};\n\nexport default Landing;","// import logo from './logo.svg';\nimport React from 'react';\nimport './App.css';\nimport Landing from './Components/Landing';\n\nfunction App() {\n  return (\n\n    <Landing></Landing>\n  \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}